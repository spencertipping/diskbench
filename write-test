#!/bin/bash
rm -rf data
mkdir data

source lib/timing-functions

begin initializing chunks
for (( i = 0; i < 10000; ++i )); do
  dd if=/dev/zero of=data/chunk-$i bs=1M count=1 >& /dev/null
done
end

begin generating sequential data
dd if=/dev/zero of=data/sequential bs=1M count=100 >& /dev/null
end

begin generating 10M random data chunks
for (( i = 0; i < 10; ++i )); do
  dd if=/dev/zero of=data/chunk-$i bs=1M count=10 >& /dev/null
done
end

begin generating 1M random data chunks
for (( i = 0; i < 100; ++i )); do
  dd if=/dev/zero of=data/chunk-$i bs=1M count=1 >& /dev/null
done
end

begin generating 100k random data chunks
for (( i = 0; i < 1000; ++i )); do
  dd if=/dev/zero of=data/chunk-$i bs=100K count=1 >& /dev/null
done
end

begin generating 10k random data chunks
for (( i = 0; i < 10000; ++i )); do
  dd if=/dev/zero of=data/chunk-$i bs=10K count=1 >& /dev/null
done
end

begin generating 1k random data chunks
for (( i = 0; i < 100000; ++i )); do
  dd if=/dev/zero of=data/chunk-$((i % 10000)) bs=1K count=1 >& /dev/null
done
end

begin generating 10M random data chunks in parallel
for (( i = 0; i < 10; ++i )); do
  dd if=/dev/zero of=data/chunk-$i bs=1M count=10 >& /dev/null &
done
end

begin generating 1M random data chunks in parallel
for (( i = 0; i < 100; ++i )); do
  dd if=/dev/zero of=data/chunk-$i bs=1M count=1 >& /dev/null &
done
end

begin generating 100k random data chunks in parallel
for (( i = 0; i < 1000; ++i )); do
  dd if=/dev/zero of=data/chunk-$i bs=100K count=1 >& /dev/null &
done
end

begin generating 10k random data chunks in parallel
for (( i = 0; i < 10000; ++i )); do
  dd if=/dev/zero of=data/chunk-$i bs=10K count=1 >& /dev/null &
done
end

begin generating 1k random data chunks in parallel
for (( i = 0; i < 100000; ++i )); do
  dd if=/dev/zero of=data/chunk-$((i % 10000)) bs=1K count=1 >& /dev/null &
done
end
